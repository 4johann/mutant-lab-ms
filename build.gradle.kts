import org.jetbrains.kotlin.gradle.tasks.KotlinCompileimport org.springframework.boot.gradle.tasks.bundling.BootJarplugins {    id("io.spring.dependency-management") version "1.0.8.RELEASE"    kotlin("jvm") version "1.4.10"    kotlin("plugin.spring") version "1.3.61"}buildscript {    val kotlinVersion = "1.4.10"    val springBootVersion = "2.2.4.RELEASE"    repositories {        mavenCentral()        maven(url = "https://repo.spring.io/snapshot")        maven(url = "https://repo.spring.io/milestone")    }    dependencies {        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")        classpath("org.jlleitschuh.gradle:ktlint-gradle:9.2.1")        classpath(kotlin("gradle-plugin"))        classpath(kotlin("allopen", kotlinVersion))        classpath(kotlin("noarg", kotlinVersion))    }}subprojects {    group = "com.microservice"}allprojects {    val ktlint by configurations.creating    val inputFiles = project.fileTree(mapOf("dir" to "src", "include" to "**/*.kt"))    val outputDir = "${project.buildDir}/reports/ktlint/"    extra["springCloudVersion"] = "Hoxton.RELEASE"    apply(plugin = "kotlin")    apply(plugin = "kotlin-spring")    apply(plugin = "kotlin-jpa")    apply(plugin = "kotlin-noarg")    apply(plugin = "kotlin-allopen")    apply(plugin = "jacoco")    apply(plugin = "org.springframework.boot")    apply(plugin = "io.spring.dependency-management")    repositories {        jcenter()        mavenCentral()        maven(url = "https://repo.spring.io/snapshot")        maven(url = "https://repo.spring.io/milestone")    }    java.sourceCompatibility = JavaVersion.VERSION_1_8    dependencies {        implementation("com.fasterxml.jackson.module:jackson-module-kotlin")        implementation(kotlin("reflect"))        implementation(kotlin("stdlib-jdk8"))        implementation("org.springframework.boot:spring-boot-starter")        implementation("org.springframework.boot:spring-boot-starter-web")        implementation("org.springframework.cloud:spring-cloud-starter-openfeign")        ktlint("com.pinterest:ktlint:0.40.0")    }    dependencyManagement {        imports {            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")        }    }    val ktlintCheck by tasks.creating(JavaExec::class) {        inputs.files(inputFiles)        outputs.dir(outputDir)        description = "Check Kotlin code style."        classpath = ktlint        main = "com.pinterest.ktlint.Main"        args = listOf("src/**/*.kt")    }    val ktlintFormat by tasks.creating(JavaExec::class) {        inputs.files(inputFiles)        outputs.dir(outputDir)        description = "Fix Kotlin code style deviations."        classpath = ktlint        main = "com.pinterest.ktlint.Main"        args = listOf("-F", "src/**/*.kt")    }    tasks.withType<KotlinCompile> {        kotlinOptions {            freeCompilerArgs = listOf("-Xjsr305=strict")            jvmTarget = "1.8"        }    }    tasks.getByName<Jar>("jar") {        enabled = true    }    tasks.getByName<BootJar>("bootJar") {        mainClassName = "com.microservice.app.ApplicationKt"        classifier = "boot"    }}